	
@style("model/FlowGraph.style")
@generatable("syntaxDiagramm.codegen.Generate","/src-gen/")
graphModel FlowGraph {
	package syntaxDiagramm
	nsURI "http://cinco.scce.info/product/flowgraph"
	diagramExtension "flowgraph"
	
	attr EString as modelName
	
	@style(greenCircle)
	@contextMenuAction("syntaxDiagramm.action.ShortestPathToEnd")
	@doubleClickAction("syntaxDiagramm.action.ShortestPathToEnd")
	node Start {
		// allow exactly one outgoing Transition
		outgoingEdges (Transition[1,1]) 
	}	
	
	@style(redCircle) 
	node End{
		/*
		
		allow an arbitrary number (>0) of incoming edges
		
		the following would have been valid as well, meaning the same:		  
		  incomingEdges (*[1,*])
		
		*/
		incomingEdges ({Transition,LabeledTransition}[1,*])
	}
	
	// use the "blueTextRectangle" as style and pass the attribute "text" as parameter
	@style(blueTextRectangle, "${name}")
	node Activity {		
		attr EString as name
		attr EString as description
		incomingEdges (*[1,*])
		outgoingEdges (LabeledTransition[1,*])
	}
	
	
	
	@style(simpleArrow)
	edge Transition { 
	}
	
	@style(labeledArrow, "${label}")
	edge LabeledTransition {
		attr EString as label
	}
}

